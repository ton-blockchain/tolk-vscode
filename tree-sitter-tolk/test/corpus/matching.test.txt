===
Pattern matching 1
===

const a = match (1) { 2 => 3, 4 => 5 };
const a = match (1) { 2 => {} 4 => { statement; } };

---
(source_file
  (constant_declaration
    (identifier)
    (match_expression
      (number_literal)
      (match_arm
        (number_literal)
        (number_literal))
      (match_arm
        (number_literal)
        (number_literal))))
  (constant_declaration
    (identifier)
    (match_expression
      (number_literal)
      (match_arm
        (number_literal)
        (block_statement))
      (match_arm
        (number_literal)
        (block_statement (expression_statement (identifier))))))
)

===
Pattern matching 2
===

const a = match (1+2) { slice => 3, SomeStruct? => 5 };
const a = match (1&2) { (int, builder) => {}, int | builder => { statement; }, };

---

(source_file
  (constant_declaration
    (identifier)
    (match_expression
      (binary_operator (number_literal) (number_literal))
      (match_arm
        (primitive_type)
        (number_literal))
      (match_arm
        (nullable_type (type_identifier))
        (number_literal))))
  (constant_declaration
    (identifier)
    (match_expression
      (binary_operator (number_literal) (number_literal))
      (match_arm
        (tensor_type (primitive_type) (primitive_type))
        (block_statement))
      (match_arm
        (union_type (primitive_type) (primitive_type))
        (block_statement (expression_statement (identifier))))))
)

===
Pattern matching 3
===

fun f() {
  match (x) {}
  var x = match (val x = y) {
    0 => {},
    int => throw 0,
    else => return 0,
  };
}

---

(source_file (function_declaration
  (identifier)
  (parameter_list)
  (block_statement
    (match_statement
      (match_expression
        (identifier)))
    (local_vars_declaration
      (var_declaration_lhs
        (identifier))
      (match_expression
        (local_vars_declaration
          (var_declaration_lhs (identifier))
          (identifier))
        (match_arm
          (number_literal)
          (block_statement))
        (match_arm
          (primitive_type)
          (number_literal))
        (match_arm
          (number_literal)))))
))
