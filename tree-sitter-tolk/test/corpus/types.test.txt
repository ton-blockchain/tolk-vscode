===
Parse simple types
===

global g: int;
global g: (slice, int);
global g: [slice, (tuple)];
global g: never;

---
(source_file
  (global_var_declaration
    (identifier)
    (primitive_type))
  (global_var_declaration
    (identifier)
    (tensor_type (primitive_type) (primitive_type)))
  (global_var_declaration
    (identifier)
    (tuple_type (primitive_type) (parenthesized_type (primitive_type))))
  (global_var_declaration
    (identifier)
    (never_type))
)

===
Parse callable types
===

global g: () -> void;
global g: int -> [slice];
global g: (int) -> (cell, builder) -> [[slice]];

---
(source_file
  (global_var_declaration
    (identifier)
    (fun_callable_type
      (tensor_type)
      (void_type)))
  (global_var_declaration
    (identifier)
    (fun_callable_type
      (primitive_type)
      (tuple_type (primitive_type))))
  (global_var_declaration
    (identifier)
    (fun_callable_type
      (parenthesized_type (primitive_type))
      (fun_callable_type
        (tensor_type (primitive_type) (primitive_type))
        (tuple_type (tuple_type (primitive_type))))))
)

===
Parse nullable types
===

global g: int?;
global g: (int, slice)??;
global g: int -> [slice]?;

---
(source_file
  (global_var_declaration
    (identifier)
    (nullable_type
      (primitive_type)))
  (global_var_declaration
    (identifier)
    (nullable_type
      (nullable_type
        (tensor_type (primitive_type) (primitive_type)))))
  (global_var_declaration
    (identifier)
    (fun_callable_type
      (primitive_type)
      (nullable_type (tuple_type (primitive_type)))))
)
