===
Simple parsing 1
===

fun lshift(): bool {
    return (1 << 0) < 1;
}
fun rshift() {
    return (1 << 0) == 1;
}
fun rshift(): (int, int) {
    return (1 << 0) <=> 1;
}
---
(source_file
  (function_declaration
    (identifier)
    (parameter_list)
    (primitive_type)
    (block_statement
      (return_statement
        (binary_operator
          (parenthesized_expression
            (binary_operator
              (number_literal)
              (number_literal)))
          (number_literal)))))
  (function_declaration
    (identifier)
    (parameter_list)
    (block_statement
      (return_statement
        (binary_operator
          (parenthesized_expression
            (binary_operator
              (number_literal)
              (number_literal)))
          (number_literal)))))
  (function_declaration
    (identifier)
    (parameter_list)
    (tensor_type
      (primitive_type)
      (primitive_type))
    (block_statement
      (return_statement
        (binary_operator
          (parenthesized_expression
            (binary_operator
              (number_literal)
              (number_literal)))
          (number_literal)))))
)

===
Function calls
===
fun main() {
    f();
    f()();
    f()()();
}
---
(source_file (function_declaration (identifier) (parameter_list) (block_statement
  (expression_statement
    (function_call (identifier) (argument_list))
  )
  (expression_statement
    (function_call (function_call (identifier) (argument_list)) (argument_list))
  )
  (expression_statement
    (function_call (function_call (function_call (identifier) (argument_list)) (argument_list)) (argument_list))
  )
)))

===
Fields access
===
fun main() {
    obj.f1;
    obj.f1.f2;
    obj.f2.f2.f3;
}
---
(source_file (function_declaration (identifier) (parameter_list) (block_statement
  (expression_statement
    (dot_access (identifier) (identifier))
  )
  (expression_statement
    (dot_access (dot_access (identifier) (identifier)) (identifier))
  )
  (expression_statement
    (dot_access (dot_access (dot_access (identifier) (identifier)) (identifier)) (identifier))
  )
)))

===
Method calls
===
fun main() {
    obj.method();
    obj.method().method();
    obj.field.method();
    obj.method().field;
}
---
(source_file (function_declaration (identifier) (parameter_list) (block_statement
  (expression_statement
    (function_call (dot_access (identifier) (identifier)) (argument_list))
  )
  (expression_statement
    (function_call
      (dot_access
        (function_call (dot_access (identifier) (identifier)) (argument_list))
        (identifier))
    (argument_list))
  )
  (expression_statement
    (function_call
      (dot_access (dot_access (identifier) (identifier)) (identifier))
    (argument_list))
  )
  (expression_statement
    (dot_access
      (function_call (dot_access (identifier) (identifier)) (argument_list))
      (identifier))
  )
)))
